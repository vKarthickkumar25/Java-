<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>project.guvi</groupId>
  <artifactId>seleniumproj</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <dependencies>
	<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.21.0</version>
</dependency>
<!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>
    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.8.0</version>
</dependency>
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class GuviRegistrationLocators {

    public static void main(String[] args) {
        // Set the path to the WebDriver executable
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");

        // Create a new instance of the Chrome driver
        WebDriver driver = new ChromeDriver();

        try {
            // Navigate to the GUVI registration page
            driver.get("https://www.guvi.in/register");

            // Maximize the browser window
            driver.manage().window().maximize();

            // Using ID locators
            WebElement fullNameById = driver.findElement(By.id("name"));
            WebElement emailById = driver.findElement(By.id("email"));
            WebElement passwordById = driver.findElement(By.id("password"));
            System.out.println("Located elements by ID");

            // Using ClassName locators
            WebElement fullNameByClassName = driver.findElement(By.className("form-control"));
            WebElement emailByClassName = driver.findElement(By.className("form-control"));
            WebElement passwordByClassName = driver.findElement(By.className("form-control"));
            System.out.println("Located elements by ClassName");

            // Using TagName locators
            WebElement inputTag = driver.findElement(By.tagName("input"));
            WebElement buttonTag = driver.findElement(By.tagName("button"));
            System.out.println("Located elements by TagName");

            // Using CSS Selector locators
            WebElement fullNameByCss = driver.findElement(By.cssSelector("#name"));
            WebElement emailByCss = driver.findElement(By.cssSelector("#email"));
            WebElement passwordByCss = driver.findElement(By.cssSelector("#password"));
            WebElement registerButtonByCss = driver.findElement(By.cssSelector("button[type='submit']"));
            System.out.println("Located elements by CSS Selector");

            // Using XPath locators
            WebElement fullNameByXpath = driver.findElement(By.xpath("//input[@id='name']"));
            WebElement emailByXpath = driver.findElement(By.xpath("//input[@id='email']"));
            WebElement passwordByXpath = driver.findElement(By.xpath("//input[@id='password']"));
            WebElement registerButtonByXpath = driver.findElement(By.xpath("//button[text()='Register']"));
            System.out.println("Located elements by XPath");

            // Perform actions with the located elements (e.g., sending keys)
            fullNameById.sendKeys("Test User");
            emailById.sendKeys("testuser@test.com");
            passwordById.sendKeys("StrongPassword123!");
            registerButtonByCss.click();

            // Print a success message
            System.out.println("Registration form filled and submitted successfully.");
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        } finally {
            // Close the browser
            driver.quit();
        }
    }
}

  </dependencies>
</project>